if("stringi" %in% rownames(installed.packages()) == FALSE) {install.packages("stringi")}
library(stringi)
if("twitteR" %in% rownames(installed.packages()) == FALSE) {install.packages("twitteR")}
library(twitteR)
if("ROAuth" %in% rownames(installed.packages()) == FALSE) {install.packages("ROAuth")}
library(ROAuth)
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
# if("tm" %in% rownames(installed.packages()) == FALSE) {install.packages("tm")}
# library(tm)
# if("rpart.plot" %in% rownames(installed.packages()) == FALSE) {install.packages("rpart.plot")}
# library(rpart.plot)
# if("e1071" %in% rownames(installed.packages()) == FALSE) {install.packages("e1071")}
# library(e1071)
# if("class" %in% rownames(installed.packages()) == FALSE) {install.packages("class")}
# library(class)
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
library(stringr)
if("base64enc" %in% rownames(installed.packages()) == FALSE) {install.packages("base64enc")}
library(base64enc)
# if("wordcloud" %in% rownames(installed.packages()) == FALSE) {install.packages("wordcloud")}
# library(wordcloud)
consumerKey = "EcMaLIydRm6jEr3fws7JqtLxX"
consumerSecret = "n3qTYOR4N0YAdZzstm7A4eKq51iyn73XhohX4R3zeUYEiOui20"
accessToken = "862671453082320896-b1KMTD7JVQ8ugqKYczuTlePhfGsaPm3"
accessTokenSecret = "cqtDYbDGyBMEQXI41ZsovtsI7YbJmHZJxnERnzR6oYKSj"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
if("stringi" %in% rownames(installed.packages()) == FALSE) {install.packages("stringi")}
library(stringi)
if("twitteR" %in% rownames(installed.packages()) == FALSE) {install.packages("twitteR")}
library(twitteR)
if("ROAuth" %in% rownames(installed.packages()) == FALSE) {install.packages("ROAuth")}
library(ROAuth)
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
# if("tm" %in% rownames(installed.packages()) == FALSE) {install.packages("tm")}
# library(tm)
# if("rpart.plot" %in% rownames(installed.packages()) == FALSE) {install.packages("rpart.plot")}
# library(rpart.plot)
# if("e1071" %in% rownames(installed.packages()) == FALSE) {install.packages("e1071")}
# library(e1071)
# if("class" %in% rownames(installed.packages()) == FALSE) {install.packages("class")}
# library(class)
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
library(stringr)
if("base64enc" %in% rownames(installed.packages()) == FALSE) {install.packages("base64enc")}
library(base64enc)
# if("wordcloud" %in% rownames(installed.packages()) == FALSE) {install.packages("wordcloud")}
# library(wordcloud)
consumerKey = "EcMaLIydRm6jEr3fws7JqtLxX"
consumerSecret = "n3qTYOR4N0YAdZzstm7A4eKq51iyn73XhohX4R3zeUYEiOui20"
accessToken = "862671453082320896-b1KMTD7JVQ8ugqKYczuTlePhfGsaPm3"
accessTokenSecret = "cqtDYbDGyBMEQXI41ZsovtsI7YbJmHZJxnERnzR6oYKSj"
setup_twitter_oauth(consumerKey, consumerSecret, accessToken, accessTokenSecret)
allTweets <- userTimeline('FilmReviewIn140', n = 346)
head(allTweets)
allTweetsdf <- do.call("rbind", lapply(allTweets, as.data.frame))
head(allTweetsdf)
#Process Tweets
#Interested in the text column of data frame.  For the purposed of this project valid reviews have the following format:
#Name of Movie (in all caps), - , Movie Review, | , Grade
#Extract Movie Names:  All characters up until " - " (with spaces)
movieNames <- str_extract(allTweetsdf$text, ".+?(?= \\- )")
#movieNames <- str_replace(movieNames, "\\(.*?\\)", "")
movieNames <- str_trim(movieNames, side="both")
#Convert to dataframe
movieNamesdf <- data.frame(movieNames, row.names = NULL, stringsAsFactors = FALSE)
#Extract Movie Review
movieReviews <- str_extract(allTweetsdf$text, "\\- ([^|]*)")
movieReviews <- str_replace(movieReviews, "-", "")
movieReviews <- str_trim(movieReviews, side="both")
movieReviewsdf <- data.frame(movieReviews, row.names = NULL, stringsAsFactors = FALSE)
#Extract Grade
movieGrades <- str_extract(allTweetsdf$text, "([[:upper:]]{1}[+|-]{0,1})$")
movieGrades <- str_trim(movieGrades, side="both")
movieGradesdf <- data.frame(movieGrades, row.names = NULL, stringsAsFactors = FALSE)
#Merge Data frames
Tweetsdf <- bind_cols(movieNamesdf, movieReviewsdf, movieGradesdf)
Tweetsdf <- na.omit(Tweetsdf)
options(httr_oauth_cache=FALSE)
setwd("~/DATA606-Submissions/Project")
#setup packages
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
if("ggplot2" %in% rownames(installed.packages()) == FALSE) {install.packages("ggplot2")}
library(ggplot2)
# load data
URL_nba_elo <- "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv"
nba_data <- read.csv(URL_nba_elo)
nbadata <-  filter(nba_data,X_iscopy == 0)
nbadata2 <- filter(nba_data, game_location == 'H')
nbadata3 <- filter(nba_data, game_location == 'A')
index <- sample(c(TRUE, FALSE), length(nba_data), replace=TRUE, prob=c(0.5,0.5))
nbadata2_a <- nbadata2[index,]
nbadata2_b <- nbadata2[!index,]
index <- sample(c(TRUE, FALSE), length(nba_data), replace=TRUE, prob=c(0.5,0.5))
nbadata3_a <- nbadata3[index,]
nbadata3_b <- nbadata3[!index,]
sampleA <- rbind(nbadata2_a, nbadata3_a)
sampleB <- rbind(nbadata2_b, nbadata2_b)
table(sampleA$game_result, useNA = 'ifany')
prop.table(table(sampleA$game_result, useNA='ifany')) * 100
table(sampleA$game_location, useNA = 'ifany')
prop.table(table(sampleA$game_location, useNA='ifany')) * 100
table(sampleA$game_location, sampleA$game_result)
p <-ggplot(sampleA, aes(game_location, values))
p +geom_bar(stat = "identity", aes(fill = game_result), position = "dodge")
p <-ggplot(sampleA, aes(game_location))
p +geom_bar(stat = "identity", aes(fill = game_result), position = "dodge")
p <-ggplot(sampleA, aes(game_location))
p +geom_bar(stat = "count", aes(fill = game_result), position = "dodge")
p <-ggplot(sampleA, aes(game_result))
p +geom_bar(stat = "count", aes(fill = game_location), position = "dodge")
summary(sampleA$elo_i)
ggplot(sampleA, aes(x=elo_i)) + geom_histogram(fill="white", colour="black") + facet_grid(game_result ~.)
summary(sampleA$opp_elo_i)
ggplot(sampleA, aes(x=opp_elo_i)) + geom_histogram(fill="white", colour="black") + facet_grid(game_result ~.)
plot(sampleA$elo_i, sampleA$opp_elo_i)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex()
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex()
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex()
ggplot(sampleA, aes(x=elo_i, y=opp_elo_i)) + geom_point() + facet_grid(game_result ~ .)
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smoth(method="lm")
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
#ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i, color=game_result))
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
#ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i, color=game_result)) + geom.point(5)
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
#ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i, color=game_result)) + geom_oint(5)
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
#ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i, color=game_result)) + geom_point(5)
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
#ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
ggplot(sampleA, aes(x=elo_i,y=opp_elo_i, color=game_result)) + geom_point(size=5)
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
ggplot(sampleA, aes(x=elo_i,y=opp_elo_i, color=game_result)) + geom_point(size=5)
ggplot(sampleA, aes(x=elo_i, y=opp_elo_i)) + geom_point() + stat_binhex() + facet_grid(game_result ~ .)
ggplot(sampleA, aes(x=elo_i, y=opp_elo_i)) + geom_point() + stat_binhex() + geom_smooth(method="lm")+ facet_grid(game_result ~ .)
#ggplot(sampleA, aes(x=opp_elo_i)) + geom_histogram(fill="white", colour="black") + facet_grid(game_result ~.)
ggplot(aes(y = opp_elo_i, x = f1f2), data = sampleA) + geom_boxplot()
#ggplot(sampleA, aes(x=opp_elo_i)) + geom_histogram(fill="white", colour="black") + facet_grid(game_result ~.)
ggplot(aes(y = opp_elo_i, x = game_result), data = sampleA) + geom_boxplot()
#ggplot(sampleA, aes(x=opp_elo_i)) + geom_histogram(fill="white", colour="black") + facet_grid(game_result ~.)
ggplot(aes(y = opp_elo_i, x = game_result), data = sampleA) + geom_boxplot()
ggplot(sampleA, aes(x=opp_elo_i)) + geom_histogram(fill="white", colour="black") + facet_grid(game_result ~.)
ggplot(aes(y = opp_elo_i, x = game_result), data = sampleA) + geom_boxplot()
ggplot(sampleA, aes(x=elo_i)) + geom_histogram(fill="white", colour="black") + facet_grid(game_result ~.)
ggplot(aes(y = elo_i, x = game_result), data = sampleA) + geom_boxplot()
if("hexbin" %in% rownames(installed.packages()) == FALSE) {install.packages("hexbin")}
library(hexbin)
#plot(sampleA$elo_i, sampleA$opp_elo_i)
ggplot(sampleA,aes(x=elo_i,y=opp_elo_i)) + stat_binhex() + geom_smooth(method="lm")
ggplot(sampleA, aes(x=elo_i,y=opp_elo_i, color=game_result)) + geom_point(size=5)
ggplot(sampleA, aes(x=elo_i, y=opp_elo_i)) + geom_point() + stat_binhex() + geom_smooth(method="lm")+ facet_grid(game_result ~ .)
?glm
p <-ggplot(sampleA, aes(game_result))
p +geom_bar(stat = "count", aes(fill = game_location), position = "dodge")
ggplot(sampleA, aes(game_location, game_result)) +
geom_tile(aes(fill = Freq), colour = "black") +
scale_fill_gradient(low = "white", high = "steelblue")
p <-ggplot(sampleA, aes(game_result))
p +geom_bar(stat = "count", aes(fill = game_location), position = "dodge")
ggplot(sampleA, aes(game_location, game_result)) +
scale_fill_gradient(low = "white", high = "steelblue")
p <-ggplot(sampleA, aes(game_result))
p +geom_bar(stat = "count", aes(fill = game_location), position = "dodge")
ggplot(sampleA, aes(game_result)) +
geom_tile(aes(fill = game_location), colour = "black") +
scale_fill_gradient(low = "white", high = "steelblue")
p <-ggplot(sampleA, aes(game_result))
p +geom_bar(stat = "count", aes(fill = game_location), position = "dodge")
View(sampleA)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
View(new_sample)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_Sample$result <- as.numeric$game_result
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_Sample$game_result <- as.numeric$game_result
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_Sample$game_result <- as.numeric(new_sample$game_result)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample$game_result <- as.numeric(new_sample$game_result)
View(new_sample)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
View(new_sample)
new_sample$game_result <- as.numeric(new_sample$game_result)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample$game_result <- as.numeric(new_sample$game_result)
model1 <- lm(game_result ~ elo_i, data=new_sample)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample$game_result <- as.numeric(new_sample$game_result)
model1 <- lm(game_result ~ elo_i, data=new_sample)
summary(model1)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample$game_result <- as.numeric(new_sample$game_result)
cor(new_sample$game_result, new_sample$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample)
summary(model1)
cor(new_sample$game_result, new_sample$opp_elo_i)
model2 <- lm(game_result ~ opp_elo_i, data=new_sample)
summary(model2)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
new_sample$game_result <- as.factor(new_sample$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample)
summary(model1)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample2)
summary(model1)
model1a <- glm(game_result ~ elo_i, data=new_sample)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample2)
summary(model1)
model1a <- glm(game_result ~ elo_i, data=new_sample)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample2)
summary(model1)
model1a <- glm(game_result ~ elo_i, data=new_sample, family = "binomial")
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample2)
summary(model1)
model1a <- glm(game_result ~ elo_i, data=new_sample, family = "binomial")
summary(model1a)
plot(model1$residuals ~ new_sample2$elo_i)
abline(h=0, lty=3)
hist(model1$residuals)
plot(model1$residuals ~ new_sample2$elo_i)
abline(h=0, lty=3)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample2)
summary(model1)
xtabs(~game_result + elo_i, data = new_sample)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample2)
summary(model1)
model1a <- glm(game_result ~ elo_i, data=new_sample, family = "binomial")
summary(model1a)
cor(new_sample$game_result, new_sample$opp_elo_i)
cor(new_sample2$game_result, new_sample2$opp_elo_i)
model2 <- lm(game_result ~ opp_elo_i, data=new_sample2)
summary(model2)
cor(new_sample2$game_result, new_sample2$opp_elo_i)
model2 <- lm(game_result ~ opp_elo_i, data=new_sample2)
summary(model2)
model2a <- glm(game_result ~ opp_elo_i, data = new_sample)
cor(new_sample2$game_result, new_sample2$opp_elo_i)
model2 <- lm(game_result ~ opp_elo_i, data=new_sample2)
summary(model2)
model2a <- glm(game_result ~ opp_elo_i, data = new_sample, family = "binomial")
summary(model2a)
cor(new_sample2$game_result, new_sample2$game_location)
//cor(new_sample2$game_result, new_sample2$game_location)
#cor(new_sample2$game_result, new_sample2$game_location)
model3 <- lm(game_result ~ game_location, data=new_sample2)
summary(model2)
model3a < glm(game_result ~ game_location, data=new_sample)
#cor(new_sample2$game_result, new_sample2$game_location)
model3 <- lm(game_result ~ game_location, data=new_sample2)
summary(model2)
model3a <- glm(game_result ~ game_location, data=new_sample)
#cor(new_sample2$game_result, new_sample2$game_location)
model3 <- lm(game_result ~ game_location, data=new_sample2)
summary(model2)
model3a <- glm(game_result ~ game_location, data=new_sample, family = "binomial")
summary(model3a)
#cor(new_sample2$game_result, new_sample2$game_location)
model3 <- lm(game_result ~ game_location, data=new_sample2)
summary(model2)
model3a <- glm(game_result ~ game_location, data=new_sample, family = "binomial")
summary(model3a)
#setup packages
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
if("ggplot2" %in% rownames(installed.packages()) == FALSE) {install.packages("ggplot2")}
library(ggplot2)
# load data
URL_nba_elo <- "https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv"
nba_data <- read.csv(URL_nba_elo)
nbadata <-  filter(nba_data,X_iscopy == 0)
nbadata2 <- filter(nba_data, game_location == 'H')
nbadata3 <- filter(nba_data, game_location == 'A')
index <- sample(c(TRUE, FALSE), length(nba_data), replace=TRUE, prob=c(0.5,0.5))
nbadata2_a <- nbadata2[index,]
nbadata2_b <- nbadata2[!index,]
index <- sample(c(TRUE, FALSE), length(nba_data), replace=TRUE, prob=c(0.5,0.5))
nbadata3_a <- nbadata3[index,]
nbadata3_b <- nbadata3[!index,]
sampleA <- rbind(nbadata2_a, nbadata3_a)
sampleB <- rbind(nbadata2_b, nbadata2_b)
#cor(new_sample2$game_result, new_sample2$game_location)
model3 <- lm(game_result ~ game_location, data=new_sample2)
new_sample <- select(sampleA, elo_i, opp_elo_i, game_location, game_result)
new_sample2<- new_sample
new_sample2$game_result <- as.numeric(new_sample2$game_result)
cor(new_sample2$game_result, new_sample2$elo_i)
model1 <- lm(game_result ~ elo_i, data=new_sample2)
summary(model1)
model1a <- glm(game_result ~ elo_i, data=new_sample, family = "binomial")
summary(model1a)
hist(model1$residuals)
plot(model1$residuals ~ new_sample2$elo_i)
abline(h=0, lty=3)
cor(new_sample2$game_result, new_sample2$opp_elo_i)
model2 <- lm(game_result ~ opp_elo_i, data=new_sample2)
summary(model2)
model2a <- glm(game_result ~ opp_elo_i, data = new_sample, family = "binomial")
summary(model2a)
#cor(new_sample2$game_result, new_sample2$game_location)
model3 <- lm(game_result ~ game_location, data=new_sample2)
summary(model2)
model3a <- glm(game_result ~ game_location, data=new_sample, family = "binomial")
summary(model3a)
#cor(new_sample2$game_result, new_sample2$game_location)
model3 <- lm(game_result ~ game_location, data=new_sample2)
summary(model3)
model3a <- glm(game_result ~ game_location, data=new_sample, family = "binomial")
summary(model3a)
